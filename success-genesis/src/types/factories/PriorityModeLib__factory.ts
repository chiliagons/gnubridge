/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PriorityModeLib,
  PriorityModeLibInterface,
} from "../PriorityModeLib";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum PriorityModeLib.Epoch",
        name: "subEpoch",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "subEpochEndTimestamp",
        type: "uint128",
      },
    ],
    name: "NewPriorityModeSubEpoch",
    type: "event",
  },
];

const _bytecode =
  "0x60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209da28d702bc15d17a1872270c91f77cea1310ef8ace2ea45f7f280c6f4d04d2464736f6c63430008070033";

export class PriorityModeLib__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PriorityModeLib> {
    return super.deploy(overrides || {}) as Promise<PriorityModeLib>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PriorityModeLib {
    return super.attach(address) as PriorityModeLib;
  }
  connect(signer: Signer): PriorityModeLib__factory {
    return super.connect(signer) as PriorityModeLib__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriorityModeLibInterface {
    return new utils.Interface(_abi) as PriorityModeLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriorityModeLib {
    return new Contract(address, _abi, signerOrProvider) as PriorityModeLib;
  }
}
