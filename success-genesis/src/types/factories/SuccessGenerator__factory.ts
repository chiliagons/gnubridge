/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SuccessGenerator,
  SuccessGeneratorInterface,
} from "../SuccessGenerator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "zkSyncAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "ergsLimit",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "callZkSync",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506104c6806100206000396000f3fe60806040526004361061001e5760003560e01c8063b4fec8b414610023575b600080fd5b61003d60048036038101906100389190610192565b61003f565b005b600033604051602401610052919061026e565b6040516020818303038152906040527f755edd17000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008590508073ffffffffffffffffffffffffffffffffffffffff1663048e478a348785886000806040518763ffffffff1660e01b8152600401610119959493929190610289565b6000604051808303818588803b15801561013257600080fd5b505af1158015610146573d6000803e3d6000fd5b5050505050505050505050565b6000813590506101628161044b565b92915050565b60008135905061017781610462565b92915050565b60008135905061018c81610479565b92915050565b600080600080608085870312156101ac576101ab61040d565b5b60006101ba87828801610153565b94505060206101cb87828801610153565b93505060406101dc8782880161017d565b92505060606101ed87828801610168565b91505092959194509250565b610202816102ff565b82525050565b6000610213826102e3565b61021d81856102ee565b935061022d8185602086016103ab565b61023681610412565b840191505092915050565b61024a81610375565b82525050565b61025981610387565b82525050565b61026881610399565b82525050565b600060208201905061028360008301846101f9565b92915050565b600060a08201905061029e60008301886101f9565b81810360208301526102b08187610208565b90506102bf604083018661025f565b6102cc6060830185610250565b6102d96080830184610241565b9695505050505050565b600081519050919050565b600082825260208201905092915050565b600061030a82610337565b9050919050565b600081905061031f82610423565b919050565b600081905061033282610437565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600067ffffffffffffffff82169050919050565b600061038082610311565b9050919050565b600061039282610324565b9050919050565b60006103a482610361565b9050919050565b60005b838110156103c95780820151818401526020810190506103ae565b838111156103d8576000848401525b50505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600080fd5b6000601f19601f8301169050919050565b60028110610434576104336103de565b5b50565b60038110610448576104476103de565b5b50565b610454816102ff565b811461045f57600080fd5b50565b61046b81610357565b811461047657600080fd5b50565b61048281610361565b811461048d57600080fd5b5056fea2646970667358221220431e927281ff4ef4f68a459a0244dd7b18745690ada7dd346ebe95966d814f3f64736f6c63430008070033";

export class SuccessGenerator__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SuccessGenerator> {
    return super.deploy(overrides || {}) as Promise<SuccessGenerator>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SuccessGenerator {
    return super.attach(address) as SuccessGenerator;
  }
  connect(signer: Signer): SuccessGenerator__factory {
    return super.connect(signer) as SuccessGenerator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SuccessGeneratorInterface {
    return new utils.Interface(_abi) as SuccessGeneratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SuccessGenerator {
    return new Contract(address, _abi, signerOrProvider) as SuccessGenerator;
  }
}
