/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SuccessGenerator,
  SuccessGeneratorInterface,
} from "../SuccessGenerator";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "TribeCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "zkSyncAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "contractAddr",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "ergsLimit",
        type: "uint64",
      },
      {
        internalType: "string",
        name: "tribeName",
        type: "string",
      },
    ],
    name: "callZkSync",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506106ed806100206000396000f3fe60806040526004361061001e5760003560e01c8063fc713c3714610023575b600080fd5b61003d60048036038101906100389190610222565b61003f565b005b60008160405160240161005291906103d0565b6040516020818303038152906040527fd30044b5000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008590507f5819191fcfb602bfc1339b3c80ed219bfcd0324480145b3bfb4aa9aac53911ad604051610103906103f2565b60405180910390a18073ffffffffffffffffffffffffffffffffffffffff1663048e478a348785886000806040518763ffffffff1660e01b815260040161014e959493929190610376565b6000604051808303818588803b15801561016757600080fd5b505af115801561017b573d6000803e3d6000fd5b5050505050505050505050565b600061019b61019684610437565b610412565b9050828152602081018484840111156101b7576101b6610618565b5b6101c2848285610542565b509392505050565b6000813590506101d981610689565b92915050565b600082601f8301126101f4576101f3610613565b5b8135610204848260208601610188565b91505092915050565b60008135905061021c816106a0565b92915050565b6000806000806080858703121561023c5761023b610622565b5b600061024a878288016101ca565b945050602061025b878288016101ca565b935050604061026c8782880161020d565b925050606085013567ffffffffffffffff81111561028d5761028c61061d565b5b610299878288016101df565b91505092959194509250565b6102ae816104a0565b82525050565b60006102bf82610468565b6102c9818561047e565b93506102d9818560208601610551565b6102e281610627565b840191505092915050565b6102f68161050c565b82525050565b6103058161051e565b82525050565b600061031682610473565b610320818561048f565b9350610330818560208601610551565b61033981610627565b840191505092915050565b6000610351600e8361048f565b915061035c82610638565b602082019050919050565b61037081610530565b82525050565b600060a08201905061038b60008301886102a5565b818103602083015261039d81876102b4565b90506103ac6040830186610367565b6103b960608301856102fc565b6103c660808301846102ed565b9695505050505050565b600060208201905081810360008301526103ea818461030b565b905092915050565b6000602082019050818103600083015261040b81610344565b9050919050565b600061041c61042d565b90506104288282610584565b919050565b6000604051905090565b600067ffffffffffffffff821115610452576104516105e4565b5b61045b82610627565b9050602081019050919050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006104ab826104d8565b9050919050565b60008190506104c082610661565b919050565b60008190506104d382610675565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600067ffffffffffffffff82169050919050565b6000610517826104b2565b9050919050565b6000610529826104c5565b9050919050565b600061053b826104f8565b9050919050565b82818337600083830152505050565b60005b8381101561056f578082015181840152602081019050610554565b8381111561057e576000848401525b50505050565b61058d82610627565b810181811067ffffffffffffffff821117156105ac576105ab6105e4565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f5472696265204372656174656421000000000000000000000000000000000000600082015250565b60028110610672576106716105b5565b5b50565b60038110610686576106856105b5565b5b50565b610692816104a0565b811461069d57600080fd5b50565b6106a9816104f8565b81146106b457600080fd5b5056fea26469706673582212207f078291f2f222f13359509fe15892056617b554a23b1ad8d9d97e18195419d064736f6c63430008070033";

export class SuccessGenerator__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SuccessGenerator> {
    return super.deploy(overrides || {}) as Promise<SuccessGenerator>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): SuccessGenerator {
    return super.attach(address) as SuccessGenerator;
  }
  connect(signer: Signer): SuccessGenerator__factory {
    return super.connect(signer) as SuccessGenerator__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SuccessGeneratorInterface {
    return new utils.Interface(_abi) as SuccessGeneratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SuccessGenerator {
    return new Contract(address, _abi, signerOrProvider) as SuccessGenerator;
  }
}
