/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IBridge, IBridgeInterface } from "../IBridge";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "serialId",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "opMetadata",
        type: "bytes",
      },
    ],
    name: "NewPriorityRequest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "zkSyncTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrawPendingBalance",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "enum Operations.QueueType",
        name: "_queueType",
        type: "uint8",
      },
      {
        internalType: "enum Operations.OpTree",
        name: "_opTree",
        type: "uint8",
      },
    ],
    name: "addCustomToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "enum Operations.QueueType",
        name: "_queueType",
        type: "uint8",
      },
      {
        internalType: "enum Operations.OpTree",
        name: "_opTree",
        type: "uint8",
      },
    ],
    name: "addToken",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasPrice",
        type: "uint256",
      },
      {
        internalType: "enum Operations.QueueType",
        name: "_queueType",
        type: "uint8",
      },
      {
        internalType: "enum Operations.OpTree",
        name: "_opTree",
        type: "uint8",
      },
    ],
    name: "addTokenBaseCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_ergsLimit",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_bytecodeLength",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_calldataLength",
        type: "uint32",
      },
      {
        internalType: "enum Operations.QueueType",
        name: "_queueType",
        type: "uint8",
      },
      {
        internalType: "enum Operations.OpTree",
        name: "_opTree",
        type: "uint8",
      },
    ],
    name: "deployContractBaseCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasPrice",
        type: "uint256",
      },
      {
        internalType: "enum Operations.QueueType",
        name: "_queueType",
        type: "uint8",
      },
      {
        internalType: "enum Operations.OpTree",
        name: "_opTree",
        type: "uint8",
      },
    ],
    name: "depositBaseCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_zkSyncAddress",
        type: "address",
      },
      {
        internalType: "enum Operations.QueueType",
        name: "_queueType",
        type: "uint8",
      },
      {
        internalType: "enum Operations.OpTree",
        name: "_opTree",
        type: "uint8",
      },
    ],
    name: "depositERC20",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_zkSyncAddress",
        type: "address",
      },
      {
        internalType: "enum Operations.QueueType",
        name: "_queueType",
        type: "uint8",
      },
      {
        internalType: "enum Operations.OpTree",
        name: "_opTree",
        type: "uint8",
      },
    ],
    name: "depositETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_ergsLimit",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_calldataLength",
        type: "uint32",
      },
      {
        internalType: "enum Operations.QueueType",
        name: "_queueType",
        type: "uint8",
      },
      {
        internalType: "enum Operations.OpTree",
        name: "_opTree",
        type: "uint8",
      },
    ],
    name: "executeBaseCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_bytecode",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_ergsLimit",
        type: "uint256",
      },
      {
        internalType: "enum Operations.QueueType",
        name: "_queueType",
        type: "uint8",
      },
      {
        internalType: "enum Operations.OpTree",
        name: "_opTree",
        type: "uint8",
      },
    ],
    name: "requestDeployContract",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contractAddressL2",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "_ergsLimit",
        type: "uint256",
      },
      {
        internalType: "enum Operations.QueueType",
        name: "_queueType",
        type: "uint8",
      },
      {
        internalType: "enum Operations.OpTree",
        name: "_opTree",
        type: "uint8",
      },
    ],
    name: "requestExecute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "enum Operations.QueueType",
        name: "_queueType",
        type: "uint8",
      },
      {
        internalType: "enum Operations.OpTree",
        name: "_opTree",
        type: "uint8",
      },
    ],
    name: "requestWithdraw",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_gasPrice",
        type: "uint256",
      },
      {
        internalType: "enum Operations.QueueType",
        name: "_queueType",
        type: "uint8",
      },
      {
        internalType: "enum Operations.OpTree",
        name: "_opTree",
        type: "uint8",
      },
    ],
    name: "withdrawBaseCost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawPendingBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IBridge__factory {
  static readonly abi = _abi;
  static createInterface(): IBridgeInterface {
    return new utils.Interface(_abi) as IBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBridge {
    return new Contract(address, _abi, signerOrProvider) as IBridge;
  }
}
