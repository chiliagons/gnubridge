{
  "address": "0x7d9f3888578a6C2779bC1fE1FFc66719D0BE75F4",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "callData",
              "type": "bytes"
            }
          ],
          "internalType": "struct Multicall.Call[]",
          "name": "calls",
          "type": "tuple[]"
        }
      ],
      "name": "aggregate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "bytes[]",
          "name": "returnData",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc935cb2b6be985279656fd3a768d58a8fc518999188b65b7836977cdddef6e02",
  "receipt": {
    "to": null,
    "from": "0x54BAA998771639628ffC0206c3b916c466b79c89",
    "contractAddress": "0x7d9f3888578a6C2779bC1fE1FFc66719D0BE75F4",
    "transactionIndex": 8,
    "gasUsed": "314445",
    "logsBloom": "0x
    "blockHash": "0xfe45b3dff6de538c86fcfd9954cb4e60a02e2396abc782b26fed512ed59d8481",
    "transactionHash": "0xc935cb2b6be985279656fd3a768d58a8fc518999188b65b7836977cdddef6e02",
    "logs": [],
    "blockNumber": 31139991,
    "cumulativeGasUsed": "2630302",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "e82dd3b24d6d9360a661a64a49812355",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"}],\"internalType\":\"struct Multicall.Call[]\",\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Multicall - Aggregate results from multiple read-only function calls\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Multicall.sol\":\"Multicall\"},\"evmVersion\":\"london\",\"libraries\":{\"contracts/lib/Connext/AssetLogic.sol:AssetLogic\":\"0xf8b649a1c5f09441cd160bb2dc01df39f5aee88e\",\"contracts/lib/Connext/ConnextUtils.sol:ConnextUtils\":\"0xc90bd1041a8316f98c7c987613c2ad0b36f68a4c\",\"contracts/lib/Connext/RouterPermissionsManagerLogic.sol:RouterPermissionsManagerLogic\":\"0xa984ef20a761e58d238043a6ac5c0411db669154\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Multicall.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.11;\\npragma experimental ABIEncoderV2;\\n\\n/// @title Multicall - Aggregate results from multiple read-only function calls\\n\\ncontract Multicall {\\n  struct Call {\\n    address target;\\n    bytes callData;\\n  }\\n\\n  function aggregate(Call[] memory calls) public returns (uint256 blockNumber, bytes[] memory returnData) {\\n    blockNumber = block.number;\\n    returnData = new bytes[](calls.length);\\n    for (uint256 i = 0; i < calls.length; i++) {\\n      (bool success, bytes memory ret) = calls[i].target.call(calls[i].callData);\\n      require(success);\\n      returnData[i] = ret;\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0xe697a3cacc3686725c3327c20038b51587934a91a5d8b2d488e214c42731c960\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506104ba806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063252dba4214610030575b600080fd5b61004361003e36600461020a565b61005a565b6040516100519291906103a7565b60405180910390f35b8051439060609067ffffffffffffffff8111156100795761007961019a565b6040519080825280602002602001820160405280156100ac57816020015b60608152602001906001900390816100975790505b50905060005b8351811015610194576000808583815181106100d0576100d0610429565b6020026020010151600001516001600160a01b03168684815181106100f7576100f7610429565b602002602001015160200151604051610110919061043f565b6000604051808303816000865af19150503d806000811461014d576040519150601f19603f3d011682016040523d82523d6000602084013e610152565b606091505b50915091508161016157600080fd5b8084848151811061017457610174610429565b60200260200101819052505050808061018c9061045b565b9150506100b2565b50915091565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156101d3576101d361019a565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156102025761020261019a565b604052919050565b6000602080838503121561021d57600080fd5b823567ffffffffffffffff8082111561023557600080fd5b818501915085601f83011261024957600080fd5b81358181111561025b5761025b61019a565b8060051b61026a8582016101d9565b918252838101850191858101908984111561028457600080fd5b86860192505b8383101561036a578235858111156102a25760008081fd5b86016040601f19828d0381018213156102bb5760008081fd5b6102c36101b0565b838b01356001600160a01b03811681146102dd5760008081fd5b815283830135898111156102f15760008081fd5b8085019450508d603f8501126103075760008081fd5b8a8401358981111561031b5761031b61019a565b61032b8c84601f840116016101d9565b92508083528e848287010111156103425760008081fd5b808486018d85013760009083018c0152808b019190915284525050918601919086019061028a565b9998505050505050505050565b60005b8381101561039257818101518382015260200161037a565b838111156103a1576000848401525b50505050565b600060408201848352602060408185015281855180845260608601915060608160051b870101935082870160005b8281101561041b57878603605f19018452815180518088526103fc81888a01898501610377565b601f01601f1916969096018501955092840192908401906001016103d5565b509398975050505050505050565b634e487b7160e01b600052603260045260246000fd5b60008251610451818460208701610377565b9190910192915050565b600060001982141561047d57634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122062c6b3a46a91e281c70ce7dd8d8dc9a9f9d879f8162368e98ed7cc8555b468a564736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063252dba4214610030575b600080fd5b61004361003e36600461020a565b61005a565b6040516100519291906103a7565b60405180910390f35b8051439060609067ffffffffffffffff8111156100795761007961019a565b6040519080825280602002602001820160405280156100ac57816020015b60608152602001906001900390816100975790505b50905060005b8351811015610194576000808583815181106100d0576100d0610429565b6020026020010151600001516001600160a01b03168684815181106100f7576100f7610429565b602002602001015160200151604051610110919061043f565b6000604051808303816000865af19150503d806000811461014d576040519150601f19603f3d011682016040523d82523d6000602084013e610152565b606091505b50915091508161016157600080fd5b8084848151811061017457610174610429565b60200260200101819052505050808061018c9061045b565b9150506100b2565b50915091565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156101d3576101d361019a565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156102025761020261019a565b604052919050565b6000602080838503121561021d57600080fd5b823567ffffffffffffffff8082111561023557600080fd5b818501915085601f83011261024957600080fd5b81358181111561025b5761025b61019a565b8060051b61026a8582016101d9565b918252838101850191858101908984111561028457600080fd5b86860192505b8383101561036a578235858111156102a25760008081fd5b86016040601f19828d0381018213156102bb5760008081fd5b6102c36101b0565b838b01356001600160a01b03811681146102dd5760008081fd5b815283830135898111156102f15760008081fd5b8085019450508d603f8501126103075760008081fd5b8a8401358981111561031b5761031b61019a565b61032b8c84601f840116016101d9565b92508083528e848287010111156103425760008081fd5b808486018d85013760009083018c0152808b019190915284525050918601919086019061028a565b9998505050505050505050565b60005b8381101561039257818101518382015260200161037a565b838111156103a1576000848401525b50505050565b600060408201848352602060408185015281855180845260608601915060608160051b870101935082870160005b8281101561041b57878603605f19018452815180518088526103fc81888a01898501610377565b601f01601f1916969096018501955092840192908401906001016103d5565b509398975050505050505050565b634e487b7160e01b600052603260045260246000fd5b60008251610451818460208701610377565b9190910192915050565b600060001982141561047d57634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122062c6b3a46a91e281c70ce7dd8d8dc9a9f9d879f8162368e98ed7cc8555b468a564736f6c634300080b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "title": "Multicall - Aggregate results from multiple read-only function calls",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}